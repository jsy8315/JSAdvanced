// 03.03. Stack, Queue 를 이용한 웹브라우저 동작원리

// 코드 위에 적든 밑에 적든 빠른거부터 실행해주네?

// 웹브라우저 내부:

// Stack : 코드 실행해주는 곳 (특징 : 하나임), 그래서 자바스크립트는 보통 single threaded라 함

// setTImeout같은 함수는 바로 실행하는 함수가 아니기 때문에, 대기실로 ㄱㄱ

// 대기실로 보내는 코드들
// Ajax 요청 코드
// 이벤트리스너
// setTimeout등

// 대기실 -> stack으로 바로ㄴㄴ, 대기 끝난 코드들을 Queue에, 
// 조건1 : stack이 텅~비었을때만 올려보냄 
// 대기실 -> Queue -> stack이 텅 비었을때 -> Stack

// for반복문씀, 천만번 돌리면 오래걸림
// 자바스크립트로 10초 걸리는 어려운 연산 시키면 안됨 : 어려운 연산이 Stack에 있는 동안 다른 작업이 동작을 안함

// 교훈
// 1. stack을 바쁘게 하지말아다오
// 2. quete를 바쁘게 하지말아다오

// 자바스크립트는 동기적? 비동기적
// 자바스크립트는 동기적으로 처리, 한줄에 한줄 처리
// 비동기적 처리 ㄱㄴ (setTimeout, 이벤트리스너, ajax 함수쓰는 경우)